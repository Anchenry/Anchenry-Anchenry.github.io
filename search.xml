<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【QT+SQLite】实现大学生课程学习管理与成绩评价系统整体设计</title>
    <url>/2023/10/13/%E4%B8%AA%E4%BA%BA%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h2 id="0-写在最前面"><a href="#0-写在最前面" class="headerlink" title="0. 写在最前面"></a>0. 写在最前面</h2><p>本次设计的程序是数据库与空间数据课程的课程设计成果，基于QT 5.9.0 MinGW 32bit使用Qt Creator4.3.0，数据库使用了Navicat 12 for SQLite 。那么两个软件的具体安装方法此处不再赘述，下面的程序设计介绍过程中也默认各位看官已经安装好了编译器和数据库，安装的方法看官们可以参考其他博主的文章进行安装。看官们也可以参照B站的讲解视频进行开发，[<a class="link"   href="https://www.bilibili.com/video/BV1pP4y1E7XM/?spm_id_from=333.999.0.0&vd_source=b9657dcf6a633f6c2d6ecf3a0f99acb9%5D%EF%BC%8CUP%E4%B8%BB%E8%AE%B2%E8%A7%A3%E7%9A%84%E6%AF%94%E8%BE%83%E4%BB%94%E7%BB%86%EF%BC%8C%E5%9C%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%9A%84%E8%BF%87%E7%A8%8B%E4%B8%AD%E4%B9%9F%E6%9C%89%E5%BE%88%E5%A4%9A%E9%83%A8%E5%88%86%E5%8F%82%E8%80%83%E4%BA%86%E8%A7%86%E9%A2%91%E4%B8%AD%E7%9A%84%E5%81%9A%E6%B3%95%E3%80%82" >https://www.bilibili.com/video/BV1pP4y1E7XM/?spm_id_from=333.999.0.0&amp;vd_source=b9657dcf6a633f6c2d6ecf3a0f99acb9]，UP主讲解的比较仔细，在程序设计的过程中也有很多部分参考了视频中的做法。 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>程序的完整程序链接在文章置顶，大家有需要可以付费下载。另外，这是本系列的第一篇文章，仅从整体设计的角度让看官们知晓需要系统需要实现的内容及大概的实现路径，后续内容会陆续更新。</p>
<h2 id="1-需求分析"><a href="#1-需求分析" class="headerlink" title="1. 需求分析"></a>1. 需求分析</h2><p>大学生课程学习管理与成绩评价系统主要用于给教师提供查询系、班级、学生基础信息、教师基础信息、学生选课信息、学生绩点信息，对信息进行维护以及通过教学楼平面图选择教室等功能；为学生提供选课以及校园导航等功能。</p>
<h2 id="（1）功能需求："><a href="#（1）功能需求：" class="headerlink" title="（1）功能需求："></a>（1）功能需求：</h2><p>创建大学生课程学习管理与成绩评价系统，选择教师端登录可以实现对教师、学生、系、课程等基础信息的维护和查询，以及对学生课程成绩、学分情况、教师授课情况和学生选课情况的查询；选择学生端登入可以进行学生选课，查询已经选择的课程和未被选择的课程。同时需要对学生成绩进行成绩评价，设计学生的绩点数据模型，每门课程分数对应有不同的绩点，通过计算规则，系统能够自动对参加学习的所有学生进行绩点统计和排名，能够按照班级对学生的平均绩点情况进行统计输出和分析。在教师录入课程信息时，可通过交互平面图选择课程教室。并且可以通过选定课程，自动跳转所在教室位置。在学生选课时，基于建立的学校空间数据，完成学校各教学设施的地图查询，同时提供路径指引，给出从宿舍到教室的最短路径。 </p>
<h2 id="（2）信息需求"><a href="#（2）信息需求" class="headerlink" title="（2）信息需求"></a>（2）信息需求</h2><p>教师属性有工作证号、姓名、职称、电话，学生属性有学号、姓名、性别、出生年月，系属性有系代号、系名和系办公室电话，课程属性有课序号、课名、课程类型、学分、上课时间及名额，课程类型分为基础必修、专业必修和选修三个类型，教室属性有教室号码、层数、容纳人数、教室的空间位置等信息。同时每个学生都属于一个班，每个班都属于一个系，每个教师也都属于一个系。一名教师可以教多门课，一门课可以有几位主讲老师，一名同学可以选多门课，一门课可被若干同学选中，每门课的学生人数有上限。一名同学选中的课若已学完，应该录入相应的成绩。本单位学生、教师可能存在重名，工作证号、学号作为标识。</p>
<h2 id="（3）环境要求"><a href="#（3）环境要求" class="headerlink" title="（3）环境要求"></a>（3）环境要求</h2><p>大学生课程学习管理与成绩评价系统采用C&#x2F;S架构，即客户端&#x2F;服务器体系结构，服务器负责数据的存储与管理，客户端负责完成与用户的交互任务，通过可视化图形界面，展示学生管理系统，并通过可视化图形界面中的按键、输入框等组件实现数据的展现、增加、删除、修改等功能，服务器与客户端都位于个人电脑。</p>
<h2 id="2-概念设计"><a href="#2-概念设计" class="headerlink" title="2. 概念设计"></a>2. 概念设计</h2><h2 id="（1）概念模型（E-R-图）"><a href="#（1）概念模型（E-R-图）" class="headerlink" title="（1）概念模型（E-R 图）"></a>（1）概念模型（E-R 图）</h2><p>大学生课程学习管理与成绩评价系统的实体集有“系”、“班级”、“学生”、“教师”、“课程”、“教室”、“课程类型”。每个班都属于一个系，每个教师也都属于一个系,所以系对班级、教师为一对多的关系；每个学生都属于一个班，班级对学生为一对多的关系；一名教师可以教多门课，一门课可以有几位主讲老师，教师与课程为多对多的关系；一名同学可以选多门课，一门课可被若干同学选中，学生与课程为多对多的关系；课程与教室进行交互式连接，为一对一的关系；课程只能有一种课程类型，课程与课程类型为一对一的关系。<br>对每个实体定义的属性如下，实体的码用下划线划出：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">系：&#123;系代号，系名，系办公室电话&#125;</span><br><span class="line">班级：&#123;班号&#125;</span><br><span class="line">学生：&#123;学号，姓名，性别，出生年月，登入密码&#125;</span><br><span class="line">教师：&#123;工作证号，姓名，职称，电话，登入密码&#125;</span><br><span class="line">课程：&#123;课名，课程号，上课时间，课程类型，学分，名额&#125;</span><br><span class="line">教室：&#123;教室号，层数，容纳人数，教室空间位置&#125;</span><br><span class="line">课程性质：&#123;基础必修，专业必修，选修&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="（2）数据字典："><a href="#（2）数据字典：" class="headerlink" title="（2）数据字典："></a>（2）数据字典：</h2><p>数据字典中的数据项主要是字符串型和整型。<br>数据项：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">系代号&#123;de_num,CHAR,<span class="number">60</span>&#125;，系名&#123;de_name,TEXT&#125;，系办公室电话&#123;de_tel,CHAR,<span class="number">60</span>&#125;</span><br><span class="line">班级&#123;cl_num,CHAR,<span class="number">60</span>&#125;</span><br><span class="line">学号&#123;stu_num,CHAR,<span class="number">60</span>&#125;，姓名&#123;stu_name,TEXT&#125;，性别&#123;stu_gender,TEXT&#125;，出生年份&#123;birth_year,INT&#125;，出生月份&#123;birth_month,INT&#125;</span><br><span class="line">工作证号&#123;te_num,CHAR,<span class="number">60</span>&#125;，姓名&#123;te_name,TEXT&#125;，职称&#123;te_tel,TEXT&#125;，电话&#123;te_tel,TEXT&#125;</span><br><span class="line">课名&#123;le_num,CHAR,<span class="number">60</span>&#125;，课程号&#123;le_name,TEXT&#125;，课程类型&#123;le_type,CHAR,<span class="number">32</span>&#125;，学分&#123;le_credit,real&#125;，上课时间&#123;le_time,TEXT&#125;，名额&#123;le_people,BIGINT&#125;</span><br><span class="line">教室号码&#123;cr_num,CHAR,<span class="number">60</span>&#125;，层数&#123;cr_floor,INT&#125;，容纳人数&#123;cr_commit,INT&#125;</span><br></pre></td></tr></table></figure></div>

<p>大学生课程学习管理与成绩评价系统采用了关系模型作为数据库的逻辑模型，在设计完成校园导航功能时利用了空间数据来构建了无向图实现最短路径的查询。同时对每个关系均设置了主键和外键约束。<br>本系统的数据流图的第一层分解图如图3，课程性质和教室授课情况等数据不需要进行更改，所以在设计系统之前通过SQL语句预先存放在了数据库中，其余的大部分数据都可由教师（管理员）或学生进行维护，实现增加、删除、修改数据。<br>本系统可以实现的数据处理有：学生选课、校园导航、系班级信息查询维护、学生基础信息查询和维护、学生选课情况查询及成绩录入、学生学业情况查询、教师基本信息查询和维护、教师授课信息查询、课程信息查询和维护。<br>需要存储的数据有：校园空间信息、学生选课及成绩信息、教师基本信息、教师授课信息、课程信息、系班级信息、学生基础信息等。<br>本系统的外部项及数据的提供者和使用者为学生和教师（管理员）。<br>其中较复杂的是处理是P1.9课程信息查询和维护，需要通过教学楼的平面图实现在录入课程信息时通过交互平面图选择课程教室，并且还可以通过选定课程自动跳转所在教室的位置，以及完成课程信息的增加、删除、修改等维护。DFD分解图如下：</p>
<h2 id="3-逻辑结构设计"><a href="#3-逻辑结构设计" class="headerlink" title="3. 逻辑结构设计"></a>3. 逻辑结构设计</h2><p>“系”实体集和“班级”实体集用“属于”联系关联，联系的基数是1：n,根据转换规则与n端对应的关系模式合并，得到2个关系模式：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">关系<span class="number">1</span>：系（系代号，系名，系办公室电话）</span><br><span class="line">关系<span class="number">2</span>：班级（班号，系代号） 系代号设置为外键</span><br></pre></td></tr></table></figure></div>

<p>“系”实体集和“教师”实体集为1对多的关系，系关系已经建立所以转化的到1个关系模式：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">关系<span class="number">1</span>：教师（工作证号，姓名，职称，电话，系代号，登入密码） 系代号设置为外键</span><br></pre></td></tr></table></figure></div>

<p>“班级”实体集和“学生”实体集也由“属于”联系关联，联系的基数是1：n，班级关系已经建立所以转化的到1个关系模式：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">关系<span class="number">1</span>：学生（学号，姓名，性别，出生年月，班号，登入密码） 班号设置为外键</span><br></pre></td></tr></table></figure></div>

<p>“课程”实体集和“教室”实体集为一对多（1：n）关系，可以再建立2个关系模型：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">关系<span class="number">1</span>：教室（教室号，层数，容纳人数，教室空间位置）</span><br><span class="line">关系<span class="number">2</span>：课程（课程号，课名，上课时间，课程性质，学分，名额，教室号） </span><br></pre></td></tr></table></figure></div>

<p>关系2课程中教室号、课程性质设置为外键<br>“学生”实体集和“课程”实体集由“选择”联系关联，为多对多（n:m）关系，可以再建立1个关系模型：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">关系<span class="number">1</span>：学生-课程（学号，课程号，成绩，重修标记）</span><br></pre></td></tr></table></figure></div>

<p>“教师”实体集和“课程”实体集为多对多关系，转化为1个关系模式：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">关系<span class="number">1</span>：教师-课程（工作证号，课程号）</span><br></pre></td></tr></table></figure></div>

<p>“课程”和“课程性质”为一对多关系，可以再建立1个关系模式：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">关系<span class="number">1</span>：课程性质（课程性质）</span><br></pre></td></tr></table></figure></div>

<p>因为课程性质不需要进行数据维护，直接添加数据“基础必修”、“专业必修”、“选修”。</p>
<h2 id="4-物理设计"><a href="#4-物理设计" class="headerlink" title="4. 物理设计"></a>4. 物理设计</h2><p>数据库存储在通过Navicat 12 for SQLite创建的数据库中，空间数据也可以通过PostGIS将在ARCGIS中处理好导出的shp文件储存在pgADmin软件的postgreSQL数据库中（这部分在系统中并没有实现，看官们可以自行尝试，GeoSever等网站也可以尝试）。</p>
]]></content>
      <categories>
        <category>QT</category>
      </categories>
      <tags>
        <tag>QT</tag>
      </tags>
  </entry>
  <entry>
    <title>【QT+SQLite】实现大学生课程学习管理与成绩评价系统（2）——数据库实现</title>
    <url>/2023/10/13/%E3%80%90QT-SQLite%E3%80%91%E5%AE%9E%E7%8E%B0%E5%A4%A7%E5%AD%A6%E7%94%9F%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AE%A1%E7%90%86%E4%B8%8E%E6%88%90%E7%BB%A9%E8%AF%84%E4%BB%B7%E7%B3%BB%E7%BB%9F%EF%BC%882%EF%BC%89%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<p>&emsp;&emsp;这是GIS系统可视化的第二篇文章，还没有看过第一篇<strong>系统整体设计</strong>的小伙伴可以在专栏里去寻找查阅，那么本篇文章将着重讲述数据库的设计和实现也就是SQLite的部分。</p>
<p>&emsp;&emsp;那么在最开始请允许我先介绍一下在此处用到的软件——Navicate for SQLite，先奉上官网[<a class="link"   href="https://www.navicat.com.cn/products/navicat-for-sqlite]%EF%BC%8C%E8%BD%AF%E4%BB%B6%E6%98%AF%E9%9C%80%E8%A6%81%E6%94%B6%E8%B4%B9%E7%9A%84%E9%82%A3%E4%B9%88%E5%B0%B1%E5%90%84%E6%98%BE%E7%A5%9E%E9%80%9A%E4%BA%86%E3%80%82Navicate" >https://www.navicat.com.cn/products/navicat-for-sqlite]，软件是需要收费的那么就各显神通了。Navicate <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for SQLite与一般的大型数据库比如SQL Sever相比最大的优点就是轻量级并且操作简便，相信你也会在接下来的学习和实操过程体会到这一区别。因为实习的特殊要求，我此处依旧使用了SQL语句来创建表、装入数据进行测试，下文中也会介绍更为简便的方式进行操作。</p>
<h2 id="1-编写模式"><a href="#1-编写模式" class="headerlink" title="1. 编写模式"></a>1. 编写模式</h2><p>&emsp;&emsp;那么接下来我们将按照功能设计时设计的表及字段进行数据库的闯创建，再次附上设E-R图。<br>&emsp;&emsp;第一步我们打开安装好的Navicate for SQLite软件，打开的界面如下，相比于SQL Sever非常的简洁，Navicate同款的for MySQL等兄弟也同样的简洁话少。<br>&emsp;&emsp;第二部打开左上角的连接，界面如下。我们需要新建一个连接，选择新建SQLite 3或者SQLite 2，再点击数据库文件这一行输入文件名并选择存储的位置。<br>&emsp;&emsp;那么这里我就直接打开我创建好的数据库进行演示啦，所有按需求建立的表如下图所示。<br>&emsp;&emsp;大家新建的数据库是没有任何表格的，别急我们用SQL语言来创建，点击数据库名称右键命令列界面输入SQL语句进行创建。SQL语句的语言规范大家可以自行Chat，此处不再赘述，我实习用到的SQL语句会随文附在文中。<br>&emsp;&emsp;简单来说，下面这段代码创建了一个名为STUDENT的表，并将学号也就是stu_num设置为逐渐，并设置班号也就是cl_num非空为必填空，并且为外键。这是我的设计，&#x3D;&#x3D;<strong>你或许会觉得我这样设计是不对的，那么没关系你可以按照自己的想法来设计这些表，要相信自己的想法肯定是对的</strong>&#x3D;&#x3D;。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> STUDENT</span><br><span class="line">(</span><br><span class="line">&quot;stu_num&quot; <span class="type">CHAR</span>(<span class="number">60</span>) <span class="keyword">PRIMARY</span> KEY, <span class="comment">--学号</span></span><br><span class="line">&quot;stu_name&quot; TEXT, <span class="comment">--姓名</span></span><br><span class="line">&quot;stu_gender&quot; TEXT, <span class="comment">--性别</span></span><br><span class="line">&quot;birth_year&quot; <span class="type">INT</span>, <span class="comment">--出生年份</span></span><br><span class="line">&quot;birth_month&quot; <span class="type">INT</span>, <span class="comment">--出生月份</span></span><br><span class="line">&quot;cl_num&quot; <span class="type">CHAR</span>(<span class="number">60</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>, <span class="comment">--班号</span></span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(&quot;cl_num&quot;) <span class="keyword">REFERENCES</span> CLASS(&quot;cl_num&quot;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></div>
<p>&emsp;&emsp;其他的表不一一解释了，相信大家能够看得懂其中的含义，还是重申大家要自己设计这些表，此处的代码仅代码我自己的想法。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> TEACHER</span><br><span class="line">(</span><br><span class="line">&quot;te_num&quot; <span class="type">CHAR</span>(<span class="number">60</span>) <span class="keyword">PRIMARY</span> KEY, <span class="comment">--工作证号</span></span><br><span class="line">&quot;te_name&quot; TEXT, <span class="comment">--姓名</span></span><br><span class="line">&quot;te_title&quot; TEXT, <span class="comment">--职称</span></span><br><span class="line">&quot;te_tel&quot; TEXT, <span class="comment">--电话</span></span><br><span class="line">&quot;de_num&quot; <span class="type">CHAR</span>(<span class="number">60</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,  <span class="comment">--所属系代号</span></span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(&quot;de_num&quot;) <span class="keyword">REFERENCES</span> DEPARTMENT(&quot;de_num&quot;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> DEPARTMENT</span><br><span class="line">(</span><br><span class="line">&quot;de_num&quot; <span class="type">CHAR</span>(<span class="number">60</span>) <span class="keyword">PRIMARY</span> KEY, <span class="comment">--系代号</span></span><br><span class="line">&quot;de_name&quot; TEXT, <span class="comment">--系名</span></span><br><span class="line">&quot;de_tel&quot;<span class="type">CHAR</span>(<span class="number">60</span>),  <span class="comment">--系办公室电话</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> LESSON</span><br><span class="line">(</span><br><span class="line">&quot;le_num&quot; <span class="type">CHAR</span>(<span class="number">60</span>) <span class="keyword">PRIMARY</span> KEY, <span class="comment">--课程号</span></span><br><span class="line">&quot;le_name&quot; TEXT, <span class="comment">--课名</span></span><br><span class="line">&quot;le_type&quot; <span class="type">CHAR</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>, <span class="comment">--课程类型</span></span><br><span class="line">&quot;le_credit&quot; <span class="type">REAL</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>, <span class="comment">--学分</span></span><br><span class="line">&quot;le_time&quot; TEXT, <span class="comment">--上课时间</span></span><br><span class="line">&quot;le_people&quot; <span class="type">BIGINT</span>, <span class="comment">--名额</span></span><br><span class="line">&quot;cr_num&quot; <span class="type">CHAR</span>(<span class="number">60</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>, <span class="comment">--教室号码</span></span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(&quot;le_type&quot;) <span class="keyword">REFERENCES</span> Course_type(&quot;le_type&quot;),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(&quot;cr_num&quot;) <span class="keyword">REFERENCES</span> CLASSROOM(&quot;cr_num&quot;)</span><br><span class="line">);</span><br><span class="line"><span class="comment">--以通过选定课程，自动跳转所在教室位置，通过课程表查询教室空间位置</span></span><br><span class="line"><span class="comment">--录入课程信息时，通过交互平面图选择课程教室</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> CLASSROOM</span><br><span class="line">(</span><br><span class="line">&quot;cr_num&quot; <span class="type">CHAR</span>(<span class="number">60</span>) <span class="keyword">PRIMARY</span> KEY, <span class="comment">--教室号码</span></span><br><span class="line">&quot;cr_floor&quot; <span class="type">INT</span>, <span class="comment">--层数</span></span><br><span class="line">&quot;cr_commit&quot; <span class="type">INT</span>, <span class="comment">--容纳人数</span></span><br><span class="line">&quot;cr_location&quot;  TEXT  <span class="comment">--教室空间位置，描述空间位置</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> CLASS</span><br><span class="line">(</span><br><span class="line">&quot;cl_num&quot; <span class="type">CHAR</span>(<span class="number">60</span>) <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">&quot;de_num&quot; <span class="type">CHAR</span>(<span class="number">60</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(&quot;de_num&quot;) <span class="keyword">REFERENCES</span> DEPARTMENT(&quot;de_num&quot;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> StuL</span><br><span class="line">(</span><br><span class="line">&quot;stu_num&quot; <span class="type">CHAR</span>(<span class="number">60</span>) , <span class="comment">--学号</span></span><br><span class="line">&quot;le_num&quot; <span class="type">CHAR</span>(<span class="number">60</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,<span class="comment">--课程号</span></span><br><span class="line">&quot;course&quot; <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>, <span class="comment">--成绩</span></span><br><span class="line">&quot;make_up&quot; <span class="type">CHAR</span>(<span class="number">12</span>), <span class="comment">--是否补考</span></span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (&quot;stu_num&quot;,&quot;le_num&quot;),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(&quot;stu_num&quot;) <span class="keyword">REFERENCES</span> STUDENT(&quot;stu_num&quot;),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(&quot;le_num&quot;) <span class="keyword">REFERENCES</span> LESSON(&quot;le_num&quot;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> TC</span><br><span class="line">(</span><br><span class="line">&quot;te_num&quot; <span class="type">CHAR</span>(<span class="number">60</span>) , <span class="comment">--工作证号</span></span><br><span class="line">&quot;le_num&quot;<span class="type">CHAR</span>(<span class="number">60</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,  <span class="comment">--课程号</span></span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (&quot;te_num&quot;,&quot;le_num&quot;),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(&quot;te_num&quot;) <span class="keyword">REFERENCES</span> TEACHER(&quot;te_num&quot;),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(&quot;le_num&quot;) <span class="keyword">REFERENCES</span> LESSON(&quot;le_num&quot;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Course_type</span><br><span class="line">(</span><br><span class="line">&quot;le_type&quot; <span class="type">CHAR</span>(<span class="number">32</span>) <span class="keyword">PRIMARY</span> KEY</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Meancourse</span><br><span class="line">(</span><br><span class="line">&quot;stu_num&quot; <span class="type">CHAR</span>(<span class="number">60</span>) , <span class="comment">--学号</span></span><br><span class="line">&quot;stu_name&quot; TEXT, <span class="comment">--学生姓名</span></span><br><span class="line">&quot;cl_num&quot; <span class="type">CHAR</span>(<span class="number">60</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>, <span class="comment">--班号</span></span><br><span class="line">&quot;meancourse&quot; <span class="type">REAL</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>, <span class="comment">--平均学分绩点</span></span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (&quot;stu_num&quot;),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(&quot;stu_num&quot;) <span class="keyword">REFERENCES</span> STUDENT(&quot;stu_num&quot;),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(&quot;cl_num&quot;) <span class="keyword">REFERENCES</span> CLASS(&quot;cl_num&quot;)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div>
<p>&emsp;&emsp;那么接下来由繁入简，介绍更简单直观的操作方法，直接点击鼠标就能够实现操作。<br>&emsp;&emsp;如下图，右键表新建表你就会跳转到设计表的界面，然后…<br>&emsp;&emsp;然后你就能看到你所有想要的操作了。嗯对，就是这么简单，这就是Navicate相比传统的数据库软件最大的好处。字段的增减和属性设置全在这啦。</p>
<h2 id="2-数据载入"><a href="#2-数据载入" class="headerlink" title="2. 数据载入"></a>2. 数据载入</h2><p>&emsp;&emsp;那么接下来我们往Navicate中装入数据，同样由繁入简（毕竟课设最大的目的是SQL语句，啊吧啊吧~），先介绍SQL语句装入方式，同样是在命令列界面中，输入SQL语句来执行，代码附上。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Course_type</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;基础必修&#x27;</span>),</span><br><span class="line">( <span class="string">&#x27;专业必修&#x27;</span>),</span><br><span class="line">( <span class="string">&#x27;专业选修&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> DEPARTMENT(&quot;de_num&quot;,&quot;de_name&quot;)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;D11&#x27;</span>,<span class="string">&#x27;地理系&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;D12&#x27;</span>,<span class="string">&#x27;空间信息系&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> CLASS(&quot;cl_num&quot;,&quot;de_num&quot;)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">( <span class="string">&#x27;114211&#x27;</span>,<span class="string">&#x27;D12&#x27;</span>),</span><br><span class="line">( <span class="string">&#x27;114212&#x27;</span>,<span class="string">&#x27;D12&#x27;</span>),</span><br><span class="line">( <span class="string">&#x27;114213&#x27;</span>,<span class="string">&#x27;D12&#x27;</span>),</span><br><span class="line">( <span class="string">&#x27;114214&#x27;</span>,<span class="string">&#x27;D12&#x27;</span>),</span><br><span class="line">( <span class="string">&#x27;118211&#x27;</span>,<span class="string">&#x27;D11&#x27;</span>),</span><br><span class="line">( <span class="string">&#x27;118212&#x27;</span>,<span class="string">&#x27;D11&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>&emsp;&emsp;那么成功创建并增加了数据后数据库中各关系的情况如下，分别为系、班级、学生、教师、课程、教室、课程性质、学生-课程、教师-课程的关系模式。<br>&emsp;&emsp;那么简单方法也是在设计表的界面直接点的行列进行输入。<br>&emsp;&emsp;好了到这里数据库的表和内容就已经全部实现了，还有一些其他的功能，比如说查询、索引、触发器，也是可以直接通过Navicate来实现的，还有就是自动运行，可以设置数据备份，防止数据不小心删除了。</p>
]]></content>
      <categories>
        <category>QT</category>
      </categories>
      <tags>
        <tag>QT</tag>
      </tags>
  </entry>
</search>
